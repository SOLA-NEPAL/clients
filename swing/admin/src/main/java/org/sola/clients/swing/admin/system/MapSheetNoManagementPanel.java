/*
 * Copyright 2012 Food and Agriculture Organization of the United Nations (FAO).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sola.clients.swing.admin.system;

import java.util.ArrayList;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;
import org.sola.clients.beans.administrative.MothListBean;
import org.sola.clients.beans.cache.CacheManager;
import org.sola.clients.beans.cadastre.MapSheetBean;
import org.sola.clients.beans.converters.TypeConverters;
import org.sola.clients.beans.referencedata.VdcBean;
import org.sola.clients.swing.ui.ContentPanel;
import org.sola.services.boundary.wsclients.WSManager;
import org.sola.webservices.transferobjects.cadastre.MapSheetTO;
import org.sola.webservices.transferobjects.referencedata.VdcTO;

/**
 *
 * @author Dinesh
 */
public class MapSheetNoManagementPanel extends ContentPanel {

    public static final String SELECTED_MAPSHEET_NO = "selectedMapsheetNo";
    private MapSheetBean mapSheetBean;
    private boolean editMode = false;
    //private ObservableList<? extends MapSheetBean> mapSheetList;

    public MapSheetBean getMapSheetBean() {
        return mapSheetBean;
    }

//    public  void setMapSheetBean(MapSheetBean mapSheetBean,MapSheetTO mapSheetTOClass, MapSheetBean mapsheetBean) {
//        this.mapSheetTOClass= mapSheetTOClass
//        this.mapSheetBean = mapSheetBean;
//    }
    /**
     * Sets reference data bean, to bind on the panel.
     */
    public void setMapSheetBean(MapSheetBean mapSheetBean) {
        //setupVdcBean(vdcBean);        
        if (mapSheetBean != null) {
            this.mapSheetBean = mapSheetBean;
        } else {
            try {
                this.mapSheetBean = new MapSheetBean();
            } catch (Exception ex) {
            }
        }
        firePropertyChange("mapSheetBean", null, this.mapSheetBean);
    }
//    public ObservableList<? extends MapSheetBean> getMapSheetList() {
//        return mapSheetList;
//    }

    /**
     * Returns selected reference data object.
     */
//    public MapSheetBean getSelectedRefData() {
//        return mapSheetBean;
//    }
//    /**
//     * Sets selected reference data object.
//     */
//    public void setSelectedRefData(MapSheetBean selectedMapSheet) {
//        
//        this.mapSheetBean = selectedMapSheet;
//        
//    }
    /**
     * Creates new form MapSheetNoManagementPanel
     */
    public MapSheetNoManagementPanel() {
        initComponents();
        initMapSheetList();
        ListSelectionModel rowSelectionModel = jTable2.getSelectionModel();
        rowSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        rowSelectionModel.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (mapSheetListBean.getSelectedMapSheet() != null && editMode) {
                    setMapSheetBean((MapSheetBean) mapSheetListBean.getSelectedMapSheet().copy());
                }
            }
        });             
     
    }

    public final void initMapSheetList() {
        mapSheetListBean.loadMapSheetList();
//        mapSheetBean.setMapNumber("1234") ;
//        mapSheetBean.setSheetType(1);
//        mapSheetListBean.addMapSheet(mapSheetBean);
//        createMapSheetList();
//        TypeConverters.TransferObjectListToBeanList(WSManager.getInstance().getCadastreService().getMapSheetList(),
//                MapSheetBean.class, (List) mapSheetList);
//       // CacheManager.remove(CacheManager.MAP_SHEET_KEY);
//       // mapSheetTOClass = MapSheetTO.class;


    }

//    /**
//     * Creates new instance of the map sheet no list if it is null.
//     *
//     *
//     */
//    private void createMapSheetList() {
//        if (mapSheetList == null) {
//            mapSheetList = ObservableCollections.observableList(new ArrayList<MapSheetBean>());
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mapSheetListBean = new org.sola.clients.beans.cadastre.MapSheetListBean();
        headerPanel1 = new org.sola.clients.swing.ui.HeaderPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbMapSheetType = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMapSheetNo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        toolbarRefData = new javax.swing.JToolBar();
        btnAddRefData = new javax.swing.JButton();
        btnEditRefData = new javax.swing.JButton();
        btnRemoveRefData = new javax.swing.JButton();

        setHeaderPanel(headerPanel1);

        headerPanel1.setTitleText("Map Sheet No. Management");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Map Sheet No."));

        jTable2.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${mapSheet}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mapSheetListBean, eLProperty, jTable2);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sheetTypeString}"));
        columnBinding.setColumnName("Map Sheet Type");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${mapNumber}"));
        columnBinding.setColumnName("Map No");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mapSheetListBean, org.jdesktop.beansbinding.ELProperty.create("${selectedMapSheet}"), jTable2, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("New Map Sheet No."));
        jPanel2.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        jLabel2.setText("Map Sheet Type");

        cmbMapSheetType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Control Sheet", "Free Sheet" }));
        cmbMapSheetType.setName("");
        cmbMapSheetType.setOpaque(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${mapSheetBean.sheetTypeString}"), cmbMapSheetType, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        cmbMapSheetType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMapSheetTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(cmbMapSheetType, 0, 299, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbMapSheetType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4);

        jLabel1.setText("Map Sheet No");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${mapSheetBean.mapNumber}"), txtMapSheetNo, org.jdesktop.beansbinding.BeanProperty.create("text"), "");
        bindingGroup.addBinding(binding);

        txtMapSheetNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMapSheetNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 232, Short.MAX_VALUE))
            .addComponent(txtMapSheetNo)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMapSheetNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3);

        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel5.add(btnSave);

        btnClose.setText("Close");
        jPanel5.add(btnClose);

        toolbarRefData.setFloatable(false);
        toolbarRefData.setRollover(true);

        btnAddRefData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/common/add.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/sola/clients/swing/admin/referencedata/Bundle"); // NOI18N
        btnAddRefData.setText(bundle.getString("ReferenceDataManagementPanel.btnAddRefData.text")); // NOI18N
        btnAddRefData.setFocusable(false);
        btnAddRefData.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddRefData.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddRefData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRefDataActionPerformed(evt);
            }
        });
        toolbarRefData.add(btnAddRefData);

        btnEditRefData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/common/pencil.png"))); // NOI18N
        btnEditRefData.setText(bundle.getString("ReferenceDataManagementPanel.btnEditRefData.text")); // NOI18N
        btnEditRefData.setFocusable(false);
        btnEditRefData.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditRefData.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditRefData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRefDataActionPerformed(evt);
            }
        });
        toolbarRefData.add(btnEditRefData);

        btnRemoveRefData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/common/remove.png"))); // NOI18N
        btnRemoveRefData.setText(bundle.getString("ReferenceDataManagementPanel.btnRemoveRefData.text")); // NOI18N
        btnRemoveRefData.setFocusable(false);
        btnRemoveRefData.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnRemoveRefData.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRemoveRefData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveRefDataActionPerformed(evt);
            }
        });
        toolbarRefData.add(btnRemoveRefData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolbarRefData, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolbarRefData, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMapSheetNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMapSheetNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMapSheetNoActionPerformed

    private void cmbMapSheetTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMapSheetTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMapSheetTypeActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        mapSheetBean.saveMapSheet();
        if (editMode) {

            if (mapSheetListBean.getSelectedMapSheet() != null) {
//            mapSheetBean.setMapNumber(mapSheetListBean.getSelectedMapSheet().getMapNumber());
                mapSheetListBean.getSelectedMapSheet().copyFromObject(mapSheetBean);
                //mapSheetListBean.getSelectedMapSheet().setSheetTypeString(mapSheetBean.getSheetTypeString());
                jTable2.setEnabled(true);
            }
        } else {
            mapSheetListBean.addMapSheet(mapSheetBean);
            addMapSheet();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnAddRefDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRefDataActionPerformed
        addMapSheet();
    }//GEN-LAST:event_btnAddRefDataActionPerformed

    private void btnEditRefDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRefDataActionPerformed
        editMapSheet();
    }//GEN-LAST:event_btnEditRefDataActionPerformed

    private void btnRemoveRefDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveRefDataActionPerformed
        removeMapSheet();
    }//GEN-LAST:event_btnRemoveRefDataActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRefData;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnEditRefData;
    private javax.swing.JButton btnRemoveRefData;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbMapSheetType;
    private org.sola.clients.swing.ui.HeaderPanel headerPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private org.sola.clients.beans.cadastre.MapSheetListBean mapSheetListBean;
    private javax.swing.JToolBar toolbarRefData;
    private javax.swing.JTextField txtMapSheetNo;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void addMapSheet() {
        editMode = false;
        setMapSheetBean(new MapSheetBean());
    }

    private void editMapSheet() {
        if (mapSheetListBean.getSelectedMapSheet() != null) {
//            mapSheetBean.setMapNumber(mapSheetListBean.getSelectedMapSheet().getMapNumber());
            setMapSheetBean((MapSheetBean) mapSheetListBean.getSelectedMapSheet().copy());
            editMode = true;
            //jTable2.setEnabled(false);
        }

        firePropertyChange("selectedRow", null, jTable2);
    }

    private void removeMapSheet() {
        mapSheetListBean.removeSelected();
    }
}
