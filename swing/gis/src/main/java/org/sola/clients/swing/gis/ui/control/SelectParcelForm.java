/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sola.clients.swing.gis.ui.control;

import com.vividsolutions.jts.geom.Geometry;
import com.vividsolutions.jts.io.ParseException;
import com.vividsolutions.jts.io.WKBReader;
import java.lang.reflect.Method;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.geotools.geometry.jts.JTS;
import org.geotools.geometry.jts.ReferencedEnvelope;
import org.sola.clients.beans.cadastre.CadastreObjectBean;
import org.sola.clients.beans.converters.TypeConverters;
import org.sola.clients.swing.gis.SelectedParcelInfo;
import org.sola.clients.swing.gis.data.PojoDataAccess;
import org.sola.clients.swing.gis.layer.CadastreChangeTargetCadastreObjectLayer;
import org.sola.clients.swing.gis.layer.CadastreTargetSegmentLayer;
import org.sola.webservices.transferobjects.cadastre.CadastreObjectTO;

/**
 *
 * @author ShresthaKabin
 */
public class SelectParcelForm extends javax.swing.JDialog {
    private CadastreTargetSegmentLayer pointsLayer = null;
    private CadastreChangeTargetCadastreObjectLayer targetParcelsLayer = null;
    private PojoDataAccess dataAccess=null;
    //temporary variable.
    private CadastreObjectTO cadastreObject=null;
    private Geometry the_Polygon=null;
    /**
     * Creates new form SelectParcelForm
     */
    public SelectParcelForm(PojoDataAccess dataAccess,
                                CadastreTargetSegmentLayer pointsLayer,
                    CadastreChangeTargetCadastreObjectLayer targetParcelsLayer) {
        super();
        initComponents();
        //initialize variables.
        set_SearchCompletionTrigger();
        this.dataAccess=dataAccess;
        this.pointsLayer=pointsLayer;
        this.targetParcelsLayer=targetParcelsLayer;
    }

    private void set_SearchCompletionTrigger(){
        Class[] cls=new Class[]{CadastreObjectBean.class,
            String.class,String.class,String.class};
        Class workingForm=this.getClass();
        Method taskCompletion=null;
        try {
            taskCompletion = workingForm.getMethod("refresh_Cadastre_Object_Searching", cls);
        } catch (Exception ex) {
            Logger.getLogger(SelectParcelForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        parcelSearchPanel.set_SearchCompletedTriggers(taskCompletion, this);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parcelSearchPanel = new org.sola.clients.swing.ui.cadastre.CadastreObjectSearchPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstParcelInfo = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(lstParcelInfo);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Details of the selected Parcel:");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addComponent(btnOK))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 217, Short.MAX_VALUE)
                .addComponent(btnOK))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void refresh_Cadastre_Object_Searching(CadastreObjectBean parcel,
            String ddc, String vdc, String wardno){
        if (parcel==null) return;
        
        cadastreObject= TypeConverters.BeanToTrasferObject(parcel, CadastreObjectTO.class);
        //display details of the cadastre object found.
        DefaultListModel def_model= new DefaultListModel();
        def_model.clear();
        def_model.addElement("Parcel Number: " + String.valueOf(parcel.getParcelno()));
        def_model.addElement("District: " + ddc);
        def_model.addElement("VDC: " + vdc);
        def_model.addElement("Ward Number: " + wardno);
        //get the geometry object.
        WKBReader wkb_reader = new WKBReader();
        DecimalFormat df=new DecimalFormat("0.000");
        try {
            the_Polygon = wkb_reader.read(cadastreObject.getGeomPolygon());
        } catch (ParseException ex) {
            Logger.getLogger(SelectParcelForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        def_model.addElement("Parcel Area: " + df.format(the_Polygon.getArea())+ " sqr. meters");
        def_model.addElement("Parcel Key: " +
                    parcel.getNameFirstpart() + "-" + parcel.getNameLastpart());
        lstParcelInfo.setModel(def_model);
        //refresh on map.
        show_Selected_Parcel_onMap();
    }
    
    private void show_Selected_Parcel_onMap(){
        if (cadastreObject==null) return;
        
        //zoom to the selected parcel.
        if (the_Polygon!=null){
            ReferencedEnvelope ref_Envelope= JTS.toEnvelope(the_Polygon);
            double expand_by=ref_Envelope.getHeight() * 0.2;//expand 20 % of height
            ref_Envelope.expandBy(expand_by);
            this.targetParcelsLayer.getMapControl().setDisplayArea(ref_Envelope);
            //main class to store the selection information.
            SelectedParcelInfo parcel_selected=new SelectedParcelInfo(dataAccess);
            parcel_selected.setTargetLayers(pointsLayer, targetParcelsLayer);
            //Prepare for fresh selection.
            parcel_selected.display_Selected_Parcel(cadastreObject,false);
        }
    }
    
    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstParcelInfo;
    private org.sola.clients.swing.ui.cadastre.CadastreObjectSearchPanel parcelSearchPanel;
    // End of variables declaration//GEN-END:variables
}
