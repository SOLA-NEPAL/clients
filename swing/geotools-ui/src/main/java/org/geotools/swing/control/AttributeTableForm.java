/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.geotools.swing.control;

import java.io.IOException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.geotools.data.simple.SimpleFeatureCollection;
import org.geotools.data.simple.SimpleFeatureIterator;
import org.geotools.map.extended.layer.ExtendedFeatureLayer;
import org.geotools.map.extended.layer.ExtendedLayer;
import org.opengis.feature.simple.SimpleFeature;
import org.opengis.feature.simple.SimpleFeatureType;
import org.opengis.feature.type.AttributeDescriptor;

/**
 *
 * @author ShresthaKabin
 */
public class AttributeTableForm extends javax.swing.JFrame {
    private ExtendedLayer mapLayer=null;
    /**
     * Creates new form AttributeTableForm
     */
    public AttributeTableForm() {
        initComponents();
    }

    public void setMapLayer(ExtendedLayer mapLayer) {
        this.mapLayer = mapLayer;
    }
    
    public AttributeTableForm(ExtendedLayer mapLayer) {
        this();
        this.mapLayer=mapLayer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void prepareJTable(SimpleFeatureCollection feas) throws IOException {
        //get all recordsets.
        DefaultTableModel defModel = new DefaultTableModel();
        table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        defModel.setRowCount(0);
        //convert back into pojolayer
        String geomfld=theGeomFieldName(feas);
        SimpleFeatureType schema = feas.getSchema();
        //Rename of the column name based on the database table field name.
        defModel.addColumn("SN");//for serial number.
        for (int i = 0; i < schema.getAttributeCount(); i++) {
            AttributeDescriptor att=schema.getDescriptor(i);
            String colname = att.getLocalName();
            if (colname.equals(geomfld)) continue;
            if (colname.equals("the_geom")) continue;
            if (colname.equals("geom")) continue;
            defModel.addColumn(colname);
        }
        defModel.setRowCount(feas.size());
        table.setModel(defModel);
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //do nothing for time being.
    }//GEN-LAST:event_formWindowOpened

    public void get_Table_Filled(String formTitle){
        try {
            ExtendedFeatureLayer fea_layer=(ExtendedFeatureLayer)mapLayer;
            SimpleFeatureCollection feas=fea_layer.getFeatureSource().getFeatures(); 
            
            //this.setTitle("Readonly Attribute Table for [" 
                               // + mapLayer.getLayerName() + "] layer");
            this.setTitle(formTitle);
            prepareJTable(feas);
            loadDataToJTable(feas);
        } catch (Exception e) {
        }
    }
    
    public void get_Table_Filled(SimpleFeatureCollection fea_col,String formTitle){
        try {
            this.setTitle(formTitle);
            prepareJTable(fea_col);
            loadDataToJTable(fea_col);
        } catch (Exception e) {
        }
    }
    
    public static String theGeomFieldName(SimpleFeatureCollection fea_col){
        if (fea_col.size()<1) return "";
        
        SimpleFeatureIterator fea_iterator=fea_col.features();
        String geomfld="";
        if (fea_iterator.hasNext()){
            SimpleFeature fea=fea_iterator.next();
            geomfld=fea.getFeatureType().getGeometryDescriptor().getName().toString();
        }
        fea_iterator.close();
        
        return geomfld;
    }
    
    public void loadDataToJTable(SimpleFeatureCollection feas) throws IOException {
        //convert back into pojolayer
        SimpleFeatureIterator feaIter=feas.features();
        if (!feaIter.hasNext()) return;
        int r = 0;
       //Now fill data into the table.
        while (feaIter.hasNext()) {
            SimpleFeature fea=feaIter.next();
            table.setValueAt(r+1, r, 0);//serial number at first column.
            //starting from index 1 assuming that first element alway geometry.
            for (int j = 1; j < fea.getAttributeCount(); j++) {
                table.setValueAt(fea.getAttribute(j), r, j);
            }
            r++;
        }
        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }

    //<editor-fold defaultstate="collapsed" desc="main method">
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttributeTableForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttributeTableForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttributeTableForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttributeTableForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AttributeTableForm().setVisible(true);
            }
        });
    }
    //</editor-fold>
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
